library(DESeq2)
library(GSVA)
library(reshape2)
library(ggplot2)
library(GSEABase)
library(GSVA)
library(edgeR)
library(dplyr)
setwd("C:\\Users\\ALEJANDRO\\Desktop\\Cross-species")

#datasets input
#DOG
#raw counts
rsc_dog=read.delim("rsc_dog.txt", row.names = 1)
#metadata
col_data_dog <- read.delim("col_data_dog.txt", row.names=1)
#EnsemblID to HGNC symbols from BioMart
dog_ensgene_to_symbol=read.delim("dog_ensgene_to_symbol.txt", row.names = 1)
#HUMAN
#Raw counts
rsc_human=read.delim("rsc_human.txt", row.names = 1)
#metadata
col_data_human <- read.delim("col_data_human.txt", row.names=1)
#Ensembl to HGNC
human_ensgene_to_symbol=read.delim("human_ensgene_to_symbol.txt", row.names = 1)
#Orthologs
human_dog_ensg=read.delim("human_dog_ensg.txt")


#DESeq2/EdgeR normalization (counts per millon conversion)
rsc_norm_human <- DGEList(rsc_human)
rsc_norm_human <- cpm(rsc_norm_human)
rsc_norm_dog <- DGEList(rsc_dog)
rsc_norm_dog <- cpm(rsc_norm_dog)

#calculating cutoff value from low expressed genes in each dataset
rsc_maxexp_dog <- setNames(aggregate(value~gene,data=aggregate(value~gene+condition, data=merge(setNames(melt(log2(1+as.matrix(rsc_norm_dog))), c("gene", "sample_name", "value")), col_data_dog, by.x="sample_name", by.y=0), FUN=mean), FUN=max), c("gene","max_exp"))
maxexp_density_dog <- density(rsc_maxexp_dog$max_exp)
cutoff_dog <- optimize(approxfun(maxexp_density_dog$x, maxexp_density_dog$y),
                       interval=c(-1,10))$minimum

rsc_maxexp_human <- setNames(aggregate(value~gene,data=aggregate(value~gene+condition, data=merge(setNames(melt(log2(1+as.matrix(rsc_norm_human))), c("gene", "sample_name", "value")), col_data_human, by.x="sample_name", by.y=0), FUN=mean), FUN=max), c("gene","max_exp"))
maxexp_density_human <- density(rsc_maxexp_human$max_exp)
cutoff_human <- optimize(approxfun(maxexp_density_human$x, maxexp_density_human$y),
                         interval=c(-2,10))$minimum

#DOG
    #filtering datasets and mapping them to HGNC symbols
    genes_exp_dog <- rsc_maxexp_dog$gene[which(rsc_maxexp_dog$max_exp >= cutoff_dog)]
    rsc_exp_dog <- rsc_dog[genes_exp_dog, ]
    rsc_norm_exp_dog <- rsc_norm_dog[genes_exp_dog, ]
    #genes with expression levels over the cutoff and that have a HGNC gene symbol mapped in dataset
    rsc_norm_exp_mapped_dog <- data.frame(
      aggregate(. ~ Associated.Gene.Name,
                data=merge(dog_ensgene_to_symbol[which(dog_ensgene_to_symbol$Associated.Gene.Name != ""),
                                                 , drop=FALSE],
                           rsc_norm_exp_dog, by.x=0, by.y=0)[,-1],
                FUN=function(expvals) {mean(log2(expvals+1))}),
      row.names=1)

#HUMAN    
    #filtering datasets and mapping them to HGNC symbols
    genes_exp_human <- rsc_maxexp_human$gene[which(rsc_maxexp_human$max_exp >= cutoff_human)]
    rsc_exp_human <- rsc_human[genes_exp_human, ]
    rsc_norm_exp_human <- rsc_norm_human[genes_exp_human, ]
    #genes with expression levels over the cutoff and that have a HGNC gene symbol mapped in dataset
    rsc_norm_exp_mapped_human <- data.frame(aggregate(. ~ Associated.Gene.Name,
                                                      data=merge(human_ensgene_to_symbol[which(human_ensgene_to_symbol$Associated.Gene.Name != ""),
                                                                                         , drop=FALSE],
                                                                 rsc_norm_exp_human, by.x=0, by.y=0)[,-1],
                                                      FUN=function(expvals) {mean(log2(expvals+1))}),
                                            row.names=1)

#GSEA enrichemnt
    gsc5 <- geneIds(getGmt("c5.all.v7.2.symbols.gmt",collectionType=BroadCollection(category="c5"),geneIdType=SymbolIdentifier()))
    
     gsva_dog_c5 <- gsva(data.matrix(rsc_norm_exp_mapped_dog), min.sz=10, max.sz=9999, gset.idx.list=gsc5,method=c("gsva"), verbose=TRUE)
     gsva_human_c5 <- gsva(data.matrix(rsc_norm_exp_mapped_human), min.sz=10, max.sz=9999, gset.idx.list=gsc5,method=c("gsva"), verbose=TRUE)
     gsva_merged <- merge(gsva_dog_c5, gsva_human_c5, by.x=0, by.y=0)
     sample_data_merged <- data.frame(rbind(col_data_dog, col_data_human),
                                      species=c(rep("dog", nrow(col_data_dog)),
                                                rep("human", nrow(col_data_human))))
     
#PCoA
pcoa_results <- cmdscale(dist(t(gsva_merged[-1])))
rownames(gsva_merged) <- gsva_merged$Row.names
merged_pcoa_data <- data.frame(sample_data_merged, pcoa_results)

      #to calculate % variation in PCoA
      pcoa_results <- cmdscale(dist(t(gsva_merged[-1])), eig=TRUE, x.ret=TRUE) 
      pcoa_var <- round(pcoa_results$eig/sum(pcoa_results$eig)*100,1)


#PCA and DIFFERENTIALLY EXPRESSED GENES BETWEEN DOG SAMPLE GROUPS
  #remember that these genese are only those who passed de cutoff expression level and also must have a HGNC gene symbol mapped in CanFam3.1
      Dog_PCA <- DESeq(DESeqDataSetFromMatrix(countData=rsc_exp_dog,
                                                         colData=data.frame(condition=factor(col_data_dog$condition,
                                                                                             levels=c("normal","cancer")),
                                                                            row.names=rownames(col_data_dog)),
                                                         design=~condition))
      boxplot(log2(counts(Dog_PCA, normalize= TRUE) +1), notch=TRUE, main="Size-factor-normalized read counts", ylab="Log2 read counts", cex= .6, cex.main=1, cex.axis= .2)    
      
            dog_vsd <- vst(Dog_PCA)
            plotPCA(dog_vsd, intgroup=c("condition"))
            #ALSO
            dog_rld <- rlog(Dog_PCA)
            plotPCA(dog_rld, intgroup=c("condition"))
            #also
            dog_dds <- estimateSizeFactors(Dog_PCA)
            #shifted log of normalized counts
            dog_se <- SummarizedExperiment(log2(counts(dog_dds, normalized=TRUE) + 1),
                                       colData=colData(dog_dds))
            plotPCA(DESeqTransform(dog_se))
      
      Human_PCA <-DESeq(DESeqDataSetFromMatrix(countData=rsc_exp_human,
                                                  colData=data.frame(condition=factor(col_data_human$condition,
                                                                                      levels=c("normal","cancer")),
                                                                     row.names=rownames(col_data_human)),
                                                  design=~condition))
      boxplot(log2(counts(Human_PCA, normalize= TRUE) +1), notch=TRUE, main="Size-factor-normalized read counts", ylab="Log2 read counts", cex= .6, cex.main=1, cex.axis= .2)    
      
      human_vsd <- vst(Human_PCA)
      plotPCA(human_vsd, intgroup=c("condition"))
      #ALSO
      human_rld <- rlog(Human_PCA)
      plotPCA(human_rld, intgroup=c("condition"))
      #also
      human_dds <- estimateSizeFactors(Human_PCA)
      #shifted log of normalized counts
      human_se <- SummarizedExperiment(log2(counts(human_dds, normalized=TRUE) + 1),
                                     colData=colData(human_dds))
      plotPCA(DESeqTransform(human_se))
      
      
  deg_dog_df <- results(Dog_PCA)
            deg_dog_df= na.omit(deg_dog_df)
            deg_dog_df_filt = deg_dog_df[deg_dog_df$padj <0.05,]
            sum(deg_dog_df_filt$padj>=0.05)
            summary(deg_dog_df_filt)
            volcano_dog <- as.data.frame(deg_dog_df)
                
            #differenteial expressed genes mapped to HGNC symbols for each species
                dog_LFC_HGNC <- as.data.frame(deg_dog_df_filt)
                dog_df_to_HGNC <- data.frame(data=merge(dog_HGNC[which(dog_HGNC$Associated.Gene.Name != ""),, drop=FALSE], dog_LFC_HGNC, by.x=1, by.y=0)[,-1], row.names=1)
            
            
  deg_human_df <- results(Human_PCA)
            deg_human_df= na.omit(deg_human_df)
            deg_human_df_filt = deg_human_df[deg_human_df$padj <0.05,]
            sum(deg_human_df_filt$padj>=0.05)
            summary(deg_human_df_filt)
            volcano_human <- as.data.frame(deg_human_df)
            
            #differenteial expressed genes mapped to HGNC symbols for each species
                human_LFC_HGNC <- as.data.frame(deg_human_df_filt)
                human_df_to_HGNC <- data.frame(data=merge(human_ensgene_to_symbol[which(human_ensgene_to_symbol$Associated.Gene.Name != ""),, drop=FALSE], human_LFC_HGNC, by.x=0, by.y=0)[,-1], row.names=1)
            
            
            
        deg_dog_human_comb_df <- merge(as.data.frame(deg_dog_df),
                                       merge(as.data.frame(deg_human_df),
                                             human_dog_ensg, by.x=0, by.y=1), by.x=0, by.y=8)
        #DEGs ORTHOLOGS 
        deg_dog_human_comb_df_filt <- deg_dog_human_comb_df[which(deg_dog_human_comb_df$padj.x <
                                                                    0.05 &
                                                                    deg_dog_human_comb_df$padj.y < 0.05),]
        
        #amount of orthologs between species
        dim(deg_dog_human_comb_df_filt)
